{"version":3,"sources":["pages/Home.js","actions/auth.js","actions/types.js","actions/post.js","utils/getUniqueUsers.js","pages/Login.js","components/Sidebar.js","components/Post.js","utils/sort.js","components/PostList.js","pages/PostsByUser.js","App.js","reducers/userReducer.js","reducers/postCreatorReducer.js","reducers/index.js","redux-persist/configureStore.js","index.js"],"names":["Home","className","to","login","a","name","email","axios","post","process","client_id","LOGGED_IN_USER","UPLOAD_POST_CREATORS","getPosts","token","get","params","sl_token","page","getUniqueUsers","posts","uniqueUsersObj","i","length","from_id","postsCount","id","from_name","Object","values","sort","userOne","userTwo","localeCompare","Login","dispatch","useDispatch","navigate","useNavigate","useState","setName","setEmail","nameError","setNameError","emailError","setEmailError","handleSubmit","e","preventDefault","res","data","type","payload","postsRes","rawPosts","uniqueUsers","console","log","onSubmit","onChange","target","value","placeholder","Sidebar","users","usersSearch","setSort","setUsersSearch","setPostsSearch","userId","useParams","initUsers","setInitUsers","undefined","timer","setTimer","useEffect","keyword","toLowerCase","clearTimeout","setTimeout","filteredUsers","filter","user","includes","map","onClick","handleClick","Post","date","Date","created_time","Intl","DateTimeFormat","month","format","getDate","getUTCFullYear","toLocaleTimeString","message","sortPostAscending","postOne","postTwo","PostList","postsSearch","initPosts","setInitPosts","sortedPosts","sortPostDescending","disabled","filteredPosts","handleSearch","PostsByUser","postCreators","useSelector","state","setUsers","setPosts","currentCreator","find","creator","App","path","element","userReducer","action","postCreatorReducer","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","basename","document","getElementById"],"mappings":"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","file":"static/js/main.86d9016d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='container__box--home'>\r\n      <h1>Welcome to the App! Please click the button to continue</h1>\r\n      <Link className='btn' to='/login'>\r\n        Go\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n//get user token\r\nexport const login = async ({ name, email }) => {\r\n  return await axios.post(`${process.env.REACT_APP_API_URL}/register`, {\r\n    client_id: process.env.REACT_APP_API_CLIENT_ID,\r\n    email,\r\n    name,\r\n  });\r\n};\r\n","export const LOGGED_IN_USER = 'LOGGED_IN_USER';\r\nexport const UPLOAD_POST_CREATORS = 'UPLOAD_POST_CREATORS';\r\n","import axios from 'axios';\r\n//get posts from user's token\r\nexport const getPosts = async (token) => {\r\n  return await axios.get(`${process.env.REACT_APP_API_URL}/posts`, {\r\n    params: {\r\n      sl_token: token,\r\n      page: 2,\r\n    },\r\n  });\r\n};\r\n","export const getUniqueUsers = (posts) => {\r\n  //process the results to get unique users\r\n  const uniqueUsersObj = {};\r\n\r\n  for (let i = 0; i < posts.length; i++) {\r\n    if (!uniqueUsersObj[posts[i].from_id]) {\r\n      uniqueUsersObj[posts[i].from_id] = {\r\n        id: posts[i].from_id,\r\n        name: posts[i].from_name,\r\n        postsCount: 1,\r\n        posts: [posts[i]],\r\n      };\r\n    } else {\r\n      uniqueUsersObj[posts[i].from_id] = {\r\n        ...uniqueUsersObj[posts[i].from_id],\r\n        postsCount: uniqueUsersObj[posts[i].from_id].postsCount + 1,\r\n        posts: [...uniqueUsersObj[posts[i].from_id].posts, posts[i]],\r\n      };\r\n    }\r\n  }\r\n  const uniqueUsers = Object.values(uniqueUsersObj);\r\n  //sort users according to name alphabetically\r\n  const sortedUniqueUsers = uniqueUsers.sort((userOne, userTwo) =>\r\n    userOne.name.localeCompare(userTwo.name)\r\n  );\r\n\r\n  return sortedUniqueUsers;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { login } from '../actions/auth';\r\nimport { LOGGED_IN_USER, UPLOAD_POST_CREATORS } from '../actions/types';\r\nimport { getPosts } from '../actions/post';\r\nimport { getUniqueUsers } from '../utils/getUniqueUsers';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [nameError, setNameError] = useState('');\r\n  const [emailError, setEmailError] = useState();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //check name input\r\n    if (!name) {\r\n      setNameError('Name is required!');\r\n      return;\r\n    } else {\r\n      setNameError('');\r\n    }\r\n\r\n    //check email input\r\n    if (!email) {\r\n      setEmailError('Email is required!');\r\n      return;\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n\r\n    try {\r\n      const res = await login({ name, email });\r\n      const { client_id, sl_token } = res.data.data;\r\n\r\n      //save user token in redux store\r\n      dispatch({ type: LOGGED_IN_USER, payload: { client_id, sl_token } });\r\n      //load posts from server\r\n      const postsRes = await getPosts(sl_token);\r\n      const rawPosts = postsRes.data.data.posts;\r\n      //get all unique users - name sorted and posts created_time sorted\r\n      const uniqueUsers = getUniqueUsers(rawPosts);\r\n      //save the unique Users in redux store\r\n      dispatch({ type: UPLOAD_POST_CREATORS, payload: uniqueUsers });\r\n      //redirect user to the posts page\r\n      navigate(`/posts/${uniqueUsers[0].id}`);\r\n    } catch (error) {\r\n      console.log('From login page', error);\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    //reset name error\r\n    setNameError('');\r\n\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    //reset email error\r\n    setEmailError('');\r\n\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='container__box--login'>\r\n      <h1>Login</h1>\r\n\r\n      <form className='form' onSubmit={handleSubmit}>\r\n        <div className='form-control'>\r\n          {nameError && <span className='error'>{nameError}</span>}\r\n          <input\r\n            type='text'\r\n            name={name}\r\n            onChange={handleNameChange}\r\n            className='form-input'\r\n            placeholder='Enter your name...'\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          {emailError && <span className='error'>{emailError}</span>}\r\n          <input\r\n            type='email'\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            className='form-input'\r\n            placeholder='Enter your email...'\r\n          />\r\n        </div>\r\n        <button type='submit' className='btn'>\r\n          Go\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Sidebar = ({\r\n  users = [],\r\n  usersSearch,\r\n  setSort,\r\n  setUsersSearch,\r\n  setPostsSearch,\r\n}) => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [initUsers, setInitUsers] = useState([]);\r\n  const [timer, setTimer] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    //init users at the beginning\r\n    setInitUsers(users);\r\n  }, [users]);\r\n\r\n  const handleClick = (user) => {\r\n    //navigate to personal user posts page\r\n    navigate(`/posts/${user.id}`);\r\n    //reset the sort\r\n    setSort('ascending');\r\n    //reset the sidebar\r\n    setInitUsers(users);\r\n    //reset the users search input\r\n    setUsersSearch('');\r\n    //reset the posts search input\r\n    setPostsSearch('');\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    //control user search input\r\n    const keyword = e.target.value.toLowerCase();\r\n    setUsersSearch(keyword);\r\n    //only trigger the search if the client stop typing in 500ms\r\n    clearTimeout(timer);\r\n    setTimer(\r\n      setTimeout(() => {\r\n        //reset all the users\r\n        setInitUsers(users);\r\n        //filter users and render the result\r\n        const filteredUsers = users.filter((user) =>\r\n          user.name.toLowerCase().includes(keyword)\r\n        );\r\n        setInitUsers(filteredUsers);\r\n      }, 500)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='sidebar__search'>\r\n        <input\r\n          value={usersSearch}\r\n          onChange={handleSearch}\r\n          type='text'\r\n          placeholder='Search user...'\r\n        />\r\n      </div>\r\n      <div className='sidebar__container'>\r\n        {initUsers.map((user) => (\r\n          <div\r\n            key={user.id}\r\n            className={`row sidebar__item ${userId === user.id && 'active'}`}\r\n            onClick={() => handleClick(user)}\r\n          >\r\n            <div className='col-8 sidebar__item--name'>{user.name}</div>\r\n            <div className='col-4 sidebar__item--count'>{user.postsCount}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nconst Post = ({ post = {} }) => {\r\n  const getTime = (date) => {\r\n    const options = { month: 'long' };\r\n    let time = `${new Intl.DateTimeFormat('en-US', options).format(\r\n      date\r\n    )} ${date.getDate()}, ${date.getUTCFullYear()} ${date.toLocaleTimeString()}`;\r\n\r\n    return time;\r\n  };\r\n\r\n  return (\r\n    <div className='post__container'>\r\n      <div className='post__header'>\r\n        <div className='post__time'>{getTime(new Date(post.created_time))}</div>\r\n        <div className='post__author'>Author: {post.from_name}</div>\r\n      </div>\r\n      <div className='post__message'>{post.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export const sortPostAscending = (posts) =>\r\n  posts.sort(\r\n    (postOne, postTwo) =>\r\n      new Date(postOne.created_time) - new Date(postTwo.created_time)\r\n  );\r\n\r\nexport const sortPostDescending = (posts) =>\r\n  posts.sort(\r\n    (postOne, postTwo) =>\r\n      new Date(postTwo.created_time) - new Date(postOne.created_time)\r\n  );\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\n\r\nimport Post from './Post';\r\nimport { sortPostAscending, sortPostDescending } from '../utils/sort';\r\n\r\nconst PostList = ({\r\n  posts = [],\r\n  sort,\r\n  setSort,\r\n  postsSearch,\r\n  setPostsSearch,\r\n}) => {\r\n  const [initPosts, setInitPosts] = useState([]);\r\n  const [timer, setTimer] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (sort === 'ascending') {\r\n      const sortedPosts = sortPostAscending(initPosts);\r\n      //set the posts as the new ascending sorted array so the posts list will be re-rendered\r\n      setInitPosts([...sortedPosts]);\r\n    } else if (sort === 'descending') {\r\n      const sortedPosts = sortPostDescending(initPosts);\r\n      //set the posts as the new desscending sorted array so the posts list will be re-rendered\r\n      setInitPosts([...sortedPosts]);\r\n    }\r\n  }, [sort]);\r\n\r\n  useEffect(() => {\r\n    setInitPosts(posts);\r\n  }, [posts]);\r\n\r\n  const handleSearch = (e) => {\r\n    //control posts search input\r\n    const keyword = e.target.value.toLowerCase();\r\n    setPostsSearch(keyword);\r\n\r\n    //trigger the search only after the user stop typing in 500ms\r\n    clearTimeout(timer);\r\n    setTimer(\r\n      setTimeout(() => {\r\n        //reset all the posts\r\n        setInitPosts(posts);\r\n        const filteredPosts = posts.filter((post) =>\r\n          post.message.toLowerCase().includes(keyword)\r\n        );\r\n        //set the filtered posts to render after search\r\n        setInitPosts(filteredPosts);\r\n      }, 500)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='posts__cta__container'>\r\n        <div className='posts__sort'>\r\n          <button\r\n            type='button'\r\n            disabled={sort === 'ascending' && true}\r\n            onClick={() => setSort('ascending')}\r\n          >\r\n            ASC\r\n          </button>\r\n          <button\r\n            type='button'\r\n            disabled={sort === 'descending' && true}\r\n            onClick={() => setSort('descending')}\r\n          >\r\n            DESC\r\n          </button>\r\n        </div>\r\n        <div className='posts__search'>\r\n          <input\r\n            type='text'\r\n            value={postsSearch}\r\n            placeholder='Search posts...'\r\n            onChange={(e) => handleSearch(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {initPosts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Sidebar from '../components/Sidebar';\r\nimport PostList from '../components/PostList';\r\nimport { Link } from 'react-router-dom';\r\nimport { sortPostAscending } from '../utils/sort';\r\n\r\nconst PostsByUser = () => {\r\n  const { userId } = useParams();\r\n  const postCreators = useSelector((state) => state.postCreators);\r\n  const [users, setUsers] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [sort, setSort] = useState('ascending');\r\n  const [usersSearch, setUsersSearch] = useState('');\r\n  const [postsSearch, setPostsSearch] = useState('');\r\n\r\n  //get post creators list for sidebar\r\n  useEffect(() => {\r\n    setUsers(postCreators);\r\n  }, []);\r\n\r\n  //get the current creators posts\r\n  useEffect(() => {\r\n    const currentCreator = postCreators.find(\r\n      (creator) => creator.id === userId\r\n    );\r\n    if (currentCreator) {\r\n      //set the posts of the current creators - ascendingly created_time sorted\r\n      setPosts(sortPostAscending(currentCreator.posts));\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className='container__box--post'>\r\n      <div className='posts__cta__container'>\r\n        <Link className='btn' to='/login'>\r\n          Back\r\n        </Link>\r\n        <Link className='btn' to='/'>\r\n          Home\r\n        </Link>\r\n      </div>\r\n      <h1>This is the posts page</h1>\r\n      <div className='row'>\r\n        {posts.length > 0 ? (\r\n          <Fragment>\r\n            <div className='col-4'>\r\n              <Sidebar\r\n                users={users}\r\n                usersSearch={usersSearch}\r\n                setSort={setSort}\r\n                setUsersSearch={setUsersSearch}\r\n                setPostsSearch={setPostsSearch}\r\n              />\r\n            </div>\r\n\r\n            <div className='col-8'>\r\n              <PostList\r\n                posts={posts}\r\n                sort={sort}\r\n                setSort={setSort}\r\n                postsSearch={postsSearch}\r\n                setPostsSearch={setPostsSearch}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <div>\r\n            <p>\r\n              There is no post to show yet or your token is expired. Please\r\n              Login again to continue to use the App.\r\n            </p>\r\n            <Link className='btn' to='/login'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsByUser;\r\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport PostsByUser from './pages/PostsByUser';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path='/' element={<Home />} />\n      <Route path='/login' element={<Login />} />\n      <Route path='/posts/:userId' element={<PostsByUser />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { LOGGED_IN_USER } from '../actions/types';\r\n\r\nconst userReducer = (state = null, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGGED_IN_USER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { UPLOAD_POST_CREATORS } from '../actions/types';\r\n\r\nconst postCreatorReducer = (state = [], action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case UPLOAD_POST_CREATORS:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postCreatorReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport userReducer from './userReducer';\r\nimport postCreatorReducer from './postCreatorReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  postCreators: postCreatorReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\n//set up redux persist\r\nconst persistConfig = {\r\n  key: 'supermetrics',\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n//Set up redux store\r\nconst initialState = {};\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux-persist/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}